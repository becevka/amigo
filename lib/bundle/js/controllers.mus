'use strict';

/* Controllers */
function AppCtrl($rootScope, Auth) {
    Auth.get(function(user) {
        $rootScope.user = user;
    });
}

function IndexCtrl($scope) {
    $scope.models = [];
    {{#models}}
    $scope.models.push('{{cName}}');
    {{/models}}
}

function LoginCtrl($rootScope, $scope, $location, Auth) {
    $scope.form = {};
    $scope.login = function () {
        Auth.save($scope.form, function(user) {
             $location.path('/');
             $rootScope.user = user;
        });
    };
}

function LogoutCtrl($scope, $location, $routeParams, Auth) {
    Auth.remove({_csrf: $routeParams.csrf}, function() {
         $location.path('/login');
    });
}

{{#models}}

function Add{{cName}}Ctrl($scope, $location, {{cName}}) {
    $scope.save = function() {
        {{cName}}.save($scope.{{name}}, function() {
            $location.path('/list{{cName}}');
        });
    }
}

function List{{cName}}Ctrl($scope, {{cName}}) {
    $scope.{{pName}} = {{cName}}.query();
}

function Edit{{cName}}Ctrl($scope, $location, $routeParams, {{cName}}{{#inner}}, {{iCName}}{{/inner}}) {
    {{cName}}.get({_id: $routeParams.id}, function({{name}}) {
        self.original = {{name}};
        $scope.{{name}} = new {{cName}}(self.original);
    });
    $scope.save = function() {
        {{cName}}.update($scope.{{name}}, function() {
            $location.path('/list{{cName}}');
        });
    };
    $scope.remove = function() {
        {{cName}}.remove({_id: $routeParams.id, _csrf: $scope.{{name}}._csrf}, function() {
          $location.path('/list{{cName}}');
        });
    };
    $scope.isClean = function() {
        return angular.equals(self.original, $scope.{{name}});
    };
    {{#inner}}
    $scope.add{{iCName}} = function() {
        if(!$scope.{{name}}.{{iPName}}) {
            $scope.{{name}}.{{iPName}} = [];
        }
        $scope.{{name}}.{{iPName}}.push({});
    };
    $scope.save{{iCName}} = function({{iName}}) {
        {{iName}}._id = $routeParams.id;
        {{iName}}._csrf = $scope.{{name}}._csrf;
        if ({{iName}}.id) {
            {{iCName}}.update({{iName}}, function({{name}}) {
                self.original = {{name}};
                $scope.{{name}} = new {{cName}}(self.original);
            });
        } else {
            {{iCName}}.save({{iName}}, function({{name}}) {
                self.original = {{name}};
                $scope.{{name}} = new {{cName}}(self.original);
            });
        }
    };
    $scope.remove{{iCName}} = function({{iName}}) {
        {{iCName}}.remove({_id: $routeParams.id, id:{{iName}}.id, _csrf: $scope.{{name}}._csrf}, function({{name}}) {
            self.original = {{name}};
            $scope.{{name}} = new {{cName}}(self.original);
        });
    };
    {{/inner}}
}
{{/models}}
